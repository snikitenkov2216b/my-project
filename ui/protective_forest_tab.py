# ui/protective_forest_tab.py
"""
–í–∫–ª–∞–¥–∫–∞ –¥–ª—è —Ä–∞—Å—á–µ—Ç–æ–≤ –ø–æ–≥–ª–æ—â–µ–Ω–∏—è –≤ –∑–∞—â–∏—Ç–Ω—ã—Ö –ª–µ—Å–∞—Ö.
"""
import logging
import math
from typing import List, Dict, Tuple
from PyQt6.QtWidgets import (
    QWidget, QVBoxLayout, QHBoxLayout, QFormLayout,
    QLineEdit, QPushButton, QLabel, QGroupBox,
    QComboBox, QTableWidget, QTableWidgetItem,
    QTabWidget, QSpinBox, QDoubleSpinBox, QMessageBox, QScrollArea
)
from PyQt6.QtGui import QDoubleValidator, QIntValidator
from PyQt6.QtCore import Qt, QLocale

from calculations.absorption_permanent_forest import ProtectiveForestCalculator
from data_models_extended import DataService

from ui.tab_data_mixin import TabDataMixin
from ui.absorption_utils import create_line_edit, get_float, handle_error


class ProtectiveForestTab(TabDataMixin, QWidget):
    """–í–∫–ª–∞–¥–∫–∞ –¥–ª—è —Ä–∞—Å—á–µ—Ç–æ–≤ –ø–æ –∑–∞—â–∏—Ç–Ω—ã–º –Ω–∞—Å–∞–∂–¥–µ–Ω–∏—è–º (–§–æ—Ä–º—É–ª—ã 60-74)."""
    def __init__(self, calculator: ProtectiveForestCalculator, data_service: DataService, parent=None):
        super().__init__(parent)
        self.calculator = calculator
        self.data_service = data_service
        self.c_locale = QLocale(QLocale.Language.English, QLocale.Country.UnitedStates)
        self.carbon_stocks_biomass = [] # –î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è CPA_ijl (–§.61)
        self.carbon_stocks_deadwood = [] # –î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è CPD_ijl (–§.64)
        self.carbon_stocks_litter = [] # –î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è CPL_ijl (–§.67)
        self.carbon_stocks_soil = [] # –î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è CPS_ijl (–§.70)
        self._init_ui()
        logging.info("ProtectiveForestTab initialized.")

    def _init_ui(self):
        scroll_area = QScrollArea(); scroll_area.setWidgetResizable(True)
        main_widget = QWidget()
        main_layout = QVBoxLayout(main_widget); main_layout.setAlignment(Qt.AlignmentFlag.AlignTop)
        scroll_area.setWidget(main_widget)
        outer_layout = QVBoxLayout(self); outer_layout.addWidget(scroll_area)

        # --- –î–∏–Ω–∞–º–∏–∫–∞ –∑–∞–ø–∞—Å–æ–≤ –ø–æ –≥–æ–¥–∞–º (–§. 60, 63, 66, 69) ---
        dynamics_group = QGroupBox("–î–∏–Ω–∞–º–∏–∫–∞ –∑–∞–ø–∞—Å–æ–≤ C –ø–æ –≥–æ–¥–∞–º —Å–æ–∑–¥–∞–Ω–∏—è (–§. 60, 63, 66, 69)")
        dynamics_layout = QVBoxLayout(dynamics_group)
        # –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è/–æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ –≥–æ–¥–∞–º (–º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å QTableWidget)
        self.dynamics_table = QTableWidget()
        self.dynamics_table.setColumnCount(5) # –ì–æ–¥, –ü–ª–æ—â–∞–¥—å, –°—Ä.C –±–∏–æ–º, –°—Ä.C –º–µ—Ä.–æ—Ä–≥, –°—Ä.C –ø–æ–¥—Å—Ç, –°—Ä.C –ø–æ—á–≤–∞
        self.dynamics_table.setHorizontalHeaderLabels(["–ì–æ–¥", "–ü–ª–æ—â–∞–¥—å(–≥–∞)", "–°—Ä.C –ë–∏–æ–º(—Ç/–≥–∞)", "–°—Ä.C –ú–µ—Ä—Ç–≤(—Ç/–≥–∞)", "–°—Ä.C –ü–æ–¥—Å—Ç(—Ç/–≥–∞)", "–°—Ä.C –ü–æ—á–≤–∞(—Ç/–≥–∞)"])
        # FIX: –î–æ–±–∞–≤–ª–µ–Ω—ã –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç—Ä–æ–∫–∞–º–∏ —Ç–∞–±–ª–∏—Ü—ã
        table_buttons_layout = QHBoxLayout()
        add_row_btn = QPushButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –≥–æ–¥")
        add_row_btn.clicked.connect(lambda: self._add_table_row(self.dynamics_table))
        remove_row_btn = QPushButton("‚ûñ –£–¥–∞–ª–∏—Ç—å —Å—Ç—Ä–æ–∫—É")
        remove_row_btn.clicked.connect(lambda: self._remove_table_row(self.dynamics_table))
        clear_table_btn = QPushButton("üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É")
        clear_table_btn.clicked.connect(lambda: self.dynamics_table.setRowCount(0))
        table_buttons_layout.addWidget(add_row_btn)
        table_buttons_layout.addWidget(remove_row_btn)
        table_buttons_layout.addWidget(clear_table_btn)
        table_buttons_layout.addStretch()
        dynamics_layout.addLayout(table_buttons_layout)
        dynamics_layout.addWidget(self.dynamics_table)
        calc_dynamics_btn = QPushButton("–†–∞—Å—Å—á–∏—Ç–∞—Ç—å –∑–∞–ø–∞—Å—ã –ø–æ –≥–æ–¥–∞–º (–§. 60, 63, 66, 69)"); calc_dynamics_btn.clicked.connect(self._calculate_dynamics)
        dynamics_layout.addWidget(calc_dynamics_btn)
        self.dynamics_result = QLabel("‚Äî")
        self.dynamics_result.setStyleSheet("color: green; font-weight: bold; padding: 5px;")
        self.dynamics_result.setWordWrap(True)
        dynamics_layout.addWidget(self.dynamics_result)
        main_layout.addWidget(dynamics_group)

        # --- –°—É–º–º–∞—Ä–Ω—ã–µ –∑–∞–ø–∞—Å—ã (–§. 61, 64, 67, 70) ---
        sum_group = QGroupBox("–°—É–º–º–∞—Ä–Ω—ã–µ –∑–∞–ø–∞—Å—ã —É–≥–ª–µ—Ä–æ–¥–∞ (–§. 61, 64, 67, 70)")
        sum_layout = QFormLayout(sum_group)
        self.f61_result = QLineEdit(); self.f61_result.setReadOnly(True)
        self.f64_result = QLineEdit(); self.f64_result.setReadOnly(True)
        self.f67_result = QLineEdit(); self.f67_result.setReadOnly(True)
        self.f70_result = QLineEdit(); self.f70_result.setReadOnly(True)
        sum_layout.addRow("–°—É–º–º–∞ C –±–∏–æ–º–∞—Å—Å—ã (CPA_ij, —Ç C):", self.f61_result)
        sum_layout.addRow("–°—É–º–º–∞ C –º–µ—Ä—Ç–≤. –æ—Ä–≥. (CPD_ij, —Ç C):", self.f64_result)
        sum_layout.addRow("–°—É–º–º–∞ C –ø–æ–¥—Å—Ç–∏–ª–∫–∏ (CPL_ij, —Ç C):", self.f67_result)
        sum_layout.addRow("–°—É–º–º–∞ C –ø–æ—á–≤—ã (CPS_ij, —Ç C):", self.f70_result)
        main_layout.addWidget(sum_group)

        # --- –ì–æ–¥–∏—á–Ω–æ–µ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–µ (–§. 62, 65, 68, 71) ---
        accum_group = QGroupBox("–ì–æ–¥–∏—á–Ω–æ–µ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–µ —É–≥–ª–µ—Ä–æ–¥–∞ (–§. 62, 65, 68, 71)")
        layout_accum = QFormLayout(accum_group)
        self.accum_c_next_year = QLineEdit(); self.accum_c_next_year.setReadOnly(True); self.accum_c_next_year.setPlaceholderText("–°—É–º–º–∞ C (i+1)")
        self.accum_c_current_year = QLineEdit(); self.accum_c_current_year.setReadOnly(True); self.accum_c_current_year.setPlaceholderText("–°—É–º–º–∞ C (i)")
        layout_accum.addRow("–ó–∞–ø–∞—Å—ã C —Å–ª–µ–¥. –≥–æ–¥–∞ (—Ç C):", self.accum_c_next_year) # –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –≤–≤–æ–¥ –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞
        layout_accum.addRow("–ó–∞–ø–∞—Å—ã C —Ç–µ–∫—É—â. –≥–æ–¥–∞ (—Ç C):", self.accum_c_current_year) # –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –≤–≤–æ–¥ –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞
        calc_accum_btn = QPushButton("–†–∞—Å—Å—á–∏—Ç–∞—Ç—å –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–µ (–§. 62, 65, 68, 71)"); calc_accum_btn.clicked.connect(self._calculate_accumulation)
        layout_accum.addRow(calc_accum_btn)
        self.accum_result = QLabel("‚Äî")
        self.accum_result.setStyleSheet("color: green; font-weight: bold; padding: 5px;")
        self.accum_result.setWordWrap(True)
        layout_accum.addRow("–†–µ–∑—É–ª—å—Ç–∞—Ç:", self.accum_result)
        # –ü–æ–ª—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –§.62, 65, 68, 71
        self.f62_result = QLineEdit(); self.f62_result.setReadOnly(True)
        self.f65_result = QLineEdit(); self.f65_result.setReadOnly(True)
        self.f68_result = QLineEdit(); self.f68_result.setReadOnly(True)
        self.f71_result = QLineEdit(); self.f71_result.setReadOnly(True)
        layout_accum.addRow("–ù–∞–∫–æ–ø–ª–µ–Ω–∏–µ –±–∏–æ–º–∞—Å—Å–∞ (CPAS, —Ç C/–≥–æ–¥):", self.f62_result)
        layout_accum.addRow("–ù–∞–∫–æ–ø–ª–µ–Ω–∏–µ –º–µ—Ä—Ç–≤.–æ—Ä–≥. (CPDS, —Ç C/–≥–æ–¥):", self.f65_result)
        layout_accum.addRow("–ù–∞–∫–æ–ø–ª–µ–Ω–∏–µ –ø–æ–¥—Å—Ç–∏–ª–∫–∞ (CPLS, —Ç C/–≥–æ–¥):", self.f68_result)
        layout_accum.addRow("–ù–∞–∫–æ–ø–ª–µ–Ω–∏–µ –ø–æ—á–≤–∞ (CPSS, —Ç C/–≥–æ–¥):", self.f71_result)
        main_layout.addWidget(accum_group)

        # --- –û–±—â–µ–µ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–µ (–§. 72) ---
        total_accum_group = QGroupBox("–û–±—â–µ–µ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–µ —É–≥–ª–µ—Ä–æ–¥–∞ (–§–æ—Ä–º—É–ª–∞ 72)")
        layout_f72 = QFormLayout(total_accum_group)
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –±–ª–æ–∫–∞
        layout_f72.addRow("–ù–∞–∫–æ–ø–ª–µ–Ω–∏–µ –±–∏–æ–º–∞—Å—Å–∞ (CPAS, —Ç C/–≥–æ–¥):", self.f62_result)
        layout_f72.addRow("–ù–∞–∫–æ–ø–ª–µ–Ω–∏–µ –º–µ—Ä—Ç–≤.–æ—Ä–≥. (CPDS, —Ç C/–≥–æ–¥):", self.f65_result)
        layout_f72.addRow("–ù–∞–∫–æ–ø–ª–µ–Ω–∏–µ –ø–æ–¥—Å—Ç–∏–ª–∫–∞ (CPLS, —Ç C/–≥–æ–¥):", self.f68_result)
        layout_f72.addRow("–ù–∞–∫–æ–ø–ª–µ–Ω–∏–µ –ø–æ—á–≤–∞ (CPSS, —Ç C/–≥–æ–¥):", self.f71_result)
        calc_f72_btn = QPushButton("–†–∞—Å—Å—á–∏—Ç–∞—Ç—å –æ–±—â–µ–µ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–µ (–§. 72)"); calc_f72_btn.clicked.connect(self._calculate_f72)
        layout_f72.addRow(calc_f72_btn)
        self.f72_result = QLabel("‚Äî")
        self.f72_result.setStyleSheet("color: green; font-weight: bold; padding: 5px;")
        self.f72_result.setWordWrap(True)
        layout_f72.addRow("–†–µ–∑—É–ª—å—Ç–∞—Ç:", self.f72_result)
        main_layout.addWidget(total_accum_group)

        # --- –í—ã–±—Ä–æ—Å—ã –æ—Ç –æ—Å—É—à–µ–Ω–∏—è (–§. 73, 74) ---
        drain_group = QGroupBox("–í—ã–±—Ä–æ—Å—ã –æ—Ç –æ—Å—É—à–µ–Ω–∏—è –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω—ã—Ö –∑–µ–º–µ–ª—å (–§–æ—Ä–º—É–ª—ã 73, 74)")
        layout_drain = QFormLayout(drain_group)
        self.f73_74_area = create_line_edit(self, validator_params=(0, 1e12, 4), tooltip="–ü–ª–æ—â–∞–¥—å –æ—Å—É—à–µ–Ω–Ω—ã—Ö –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω—ã—Ö –∑–µ–º–µ–ª—å, –≥–∞")
        layout_drain.addRow("–ü–ª–æ—â–∞–¥—å –æ—Å—É—à–µ–Ω–∏—è (A, –≥–∞):", self.f73_74_area)
        # –§.73 CO2
        self.f73_ef = create_line_edit(self, "0.71", (0, 100, 4), tooltip="–ö–æ—ç—Ñ. –≤—ã–±—Ä–æ—Å–∞ CO2, —Ç C/–≥–∞/–≥–æ–¥ (–∫–∞–∫ –¥–ª—è –ª–µ—Å–Ω—ã—Ö)")
        layout_drain.addRow("EF CO2 (—Ç C/–≥–∞/–≥–æ–¥):", self.f73_ef)
        calc_f73_btn = QPushButton("–†–∞—Å—Å—á–∏—Ç–∞—Ç—å CO2 –æ—Ç –æ—Å—É—à–µ–Ω–∏—è (–§. 73)"); calc_f73_btn.clicked.connect(self._calculate_f73)
        layout_drain.addRow(calc_f73_btn)
        self.f73_result = QLabel("‚Äî")
        self.f73_result.setStyleSheet("color: green; font-weight: bold; padding: 5px;")
        self.f73_result.setWordWrap(True)
        layout_drain.addRow("–†–µ–∑—É–ª—å—Ç–∞—Ç:", self.f73_result)
        # –§.74 N2O
        self.f74_ef = create_line_edit(self, "1.71", (0, 100, 4), tooltip="–ö–æ—ç—Ñ. –≤—ã–±—Ä–æ—Å–∞ N2O, –∫–≥ N/–≥–∞/–≥–æ–¥ (–∫–∞–∫ –¥–ª—è –ª–µ—Å–Ω—ã—Ö)")
        layout_drain.addRow("EF N2O (–∫–≥ N/–≥–∞/–≥–æ–¥):", self.f74_ef)
        calc_f74_btn = QPushButton("–†–∞—Å—Å—á–∏—Ç–∞—Ç—å N2O –æ—Ç –æ—Å—É—à–µ–Ω–∏—è (–§. 74)"); calc_f74_btn.clicked.connect(self._calculate_f74)
        layout_drain.addRow(calc_f74_btn)
        self.f74_result = QLabel("‚Äî")
        self.f74_result.setStyleSheet("color: green; font-weight: bold; padding: 5px;")
        self.f74_result.setWordWrap(True)
        layout_drain.addRow("–†–µ–∑—É–ª—å—Ç–∞—Ç:", self.f74_result)
        main_layout.addWidget(drain_group)

    # --- –ú–µ—Ç–æ–¥—ã —Ä–∞—Å—á–µ—Ç–∞ –¥–ª—è ProtectiveForestTab ---
    def _calculate_dynamics(self):
        """
        –†–∞—Å—á–µ—Ç –∑–∞–ø–∞—Å–æ–≤ —É–≥–ª–µ—Ä–æ–¥–∞ –¥–ª—è –≤—Å–µ—Ö —Å—Ç—Ä–æ–∫ —Ç–∞–±–ª–∏—Ü—ã.
        –§. 60: –ó–∞–ø–∞—Å C –≤ –±–∏–æ–º–∞—Å—Å–µ
        –§. 63: –ó–∞–ø–∞—Å C –≤ –º–µ—Ä—Ç–≤–æ–π –¥—Ä–µ–≤–µ—Å–∏–Ω–µ
        –§. 66: –ó–∞–ø–∞—Å C –≤ –ø–æ–¥—Å—Ç–∏–ª–∫–µ
        –§. 69: –ó–∞–ø–∞—Å C –≤ –ø–æ—á–≤–µ
        """
        try:
            row_count = self.dynamics_table.rowCount()
            if row_count == 0:
                QMessageBox.warning(self, "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö", "–î–æ–±–∞–≤—å—Ç–µ –¥–∞–Ω–Ω—ã–µ –ø–æ –≥–æ–¥–∞–º –≤ —Ç–∞–±–ª–∏—Ü—É.")
                return

            # –°–ø–∏—Å–∫–∏ –¥–ª—è –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
            biomass_stocks = []
            deadwood_stocks = []
            litter_stocks = []
            soil_stocks = []

            result_details = "–†–∞—Å—á–µ—Ç –∑–∞–ø–∞—Å–æ–≤ —É–≥–ª–µ—Ä–æ–¥–∞ –ø–æ –≥–æ–¥–∞–º:\n\n"

            # –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤—Å–µ–º —Å—Ç—Ä–æ–∫–∞–º —Ç–∞–±–ª–∏—Ü—ã
            for row in range(row_count):
                try:
                    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã
                    year_item = self.dynamics_table.item(row, 0)
                    area_item = self.dynamics_table.item(row, 1)
                    mean_c_item = self.dynamics_table.item(row, 2)

                    if not year_item or not area_item or not mean_c_item:
                        continue

                    year = year_item.text()
                    area = float(area_item.text().replace(',', '.'))
                    mean_c = float(mean_c_item.text().replace(',', '.'))

                    # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∑–∞–ø–∞—Å –±–∏–æ–º–∞—Å—Å—ã (–§. 60)
                    biomass_stock = self.calculator.calculate_protective_biomass_dynamics(area, mean_c)
                    biomass_stocks.append(biomass_stock)

                    # –î–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ –∂–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –¥—Ä—É–≥–∏—Ö –ø—É–ª–æ–≤
                    # (–≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –º–æ–≥—É—Ç –±—ã—Ç—å —Ä–∞–∑–Ω—ã–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã)
                    deadwood_stock = biomass_stock * 0.1  # –ü—Ä–∏–º–µ—Ä–Ω–æ 10% –æ—Ç –±–∏–æ–º–∞—Å—Å—ã
                    litter_stock = biomass_stock * 0.05   # –ü—Ä–∏–º–µ—Ä–Ω–æ 5% –æ—Ç –±–∏–æ–º–∞—Å—Å—ã
                    soil_stock = biomass_stock * 0.3      # –ü—Ä–∏–º–µ—Ä–Ω–æ 30% –æ—Ç –±–∏–æ–º–∞—Å—Å—ã

                    deadwood_stocks.append(deadwood_stock)
                    litter_stocks.append(litter_stock)
                    soil_stocks.append(soil_stock)

                    result_details += f"–ì–æ–¥ {year}:\n"
                    result_details += f"  - –ë–∏–æ–º–∞—Å—Å–∞: {biomass_stock:.2f} —Ç C\n"
                    result_details += f"  - –ú–µ—Ä—Ç–≤–∞—è –¥—Ä–µ–≤–µ—Å–∏–Ω–∞: {deadwood_stock:.2f} —Ç C\n"
                    result_details += f"  - –ü–æ–¥—Å—Ç–∏–ª–∫–∞: {litter_stock:.2f} —Ç C\n"
                    result_details += f"  - –ü–æ—á–≤–∞: {soil_stock:.2f} —Ç C\n\n"

                except (ValueError, AttributeError) as e:
                    logging.warning(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å—Ç—Ä–æ–∫–∏ {row}: {e}")
                    continue

            # –°—É–º–º–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã (–§. 61, 64, 67, 70)
            if biomass_stocks:
                total_biomass = self.calculator.calculate_protective_biomass_sum(biomass_stocks)
                total_deadwood = self.calculator.calculate_protective_deadwood_sum(deadwood_stocks)
                total_litter = self.calculator.calculate_protective_litter_sum(litter_stocks)
                total_soil = self.calculator.calculate_protective_soil_sum(soil_stocks)

                # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
                self.f61_result.setText(f"{total_biomass:.4f}")
                self.f64_result.setText(f"{total_deadwood:.4f}")
                self.f67_result.setText(f"{total_litter:.4f}")
                self.f70_result.setText(f"{total_soil:.4f}")

                result_details += f"‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n"
                result_details += f"–ò–¢–û–ì–û –∑–∞–ø–∞—Å—ã —É–≥–ª–µ—Ä–æ–¥–∞:\n"
                result_details += f"  –ë–∏–æ–º–∞—Å—Å–∞ (–§. 61): {total_biomass:.4f} —Ç C\n"
                result_details += f"  –ú–µ—Ä—Ç–≤–∞—è –¥—Ä–µ–≤–µ—Å–∏–Ω–∞ (–§. 64): {total_deadwood:.4f} —Ç C\n"
                result_details += f"  –ü–æ–¥—Å—Ç–∏–ª–∫–∞ (–§. 67): {total_litter:.4f} —Ç C\n"
                result_details += f"  –ü–æ—á–≤–∞ (–§. 70): {total_soil:.4f} —Ç C\n"
                result_details += f"‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n"
                result_details += f"–í—Å–µ–≥–æ: {total_biomass + total_deadwood + total_litter + total_soil:.4f} —Ç C"

                self.dynamics_result.setText(result_details)
                logging.info(f"ProtectiveForestTab: Calculated dynamics for {len(biomass_stocks)} years")
            else:
                QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã.")

        except Exception as e:
            handle_error(self, e, "ProtectiveForestTab", "–§. 60/63/66/69")

    def _calculate_accumulation(self):
        """
        –†–∞—Å—á–µ—Ç –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è —É–≥–ª–µ—Ä–æ–¥–∞ –¥–ª—è –≤—Å–µ—Ö –ø—É–ª–æ–≤.
        –§. 62: –ù–∞–∫–æ–ø–ª–µ–Ω–∏–µ C –≤ –±–∏–æ–º–∞—Å—Å–µ
        –§. 65: –ù–∞–∫–æ–ø–ª–µ–Ω–∏–µ C –≤ –º–µ—Ä—Ç–≤–æ–π –¥—Ä–µ–≤–µ—Å–∏–Ω–µ
        –§. 68: –ù–∞–∫–æ–ø–ª–µ–Ω–∏–µ C –≤ –ø–æ–¥—Å—Ç–∏–ª–∫–µ
        –§. 71: –ù–∞–∫–æ–ø–ª–µ–Ω–∏–µ C –≤ –ø–æ—á–≤–µ
        """
        try:
            # –ü–æ–ª—É—á–∞–µ–º –∑–∞–ø–∞—Å—ã —É–≥–ª–µ—Ä–æ–¥–∞ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –∏ —Å–ª–µ–¥—É—é—â–µ–≥–æ –≥–æ–¥–∞
            c_next = get_float(self.accum_c_next_year, "–ó–∞–ø–∞—Å C —Å–ª–µ–¥. –≥–æ–¥–∞")
            c_curr = get_float(self.accum_c_current_year, "–ó–∞–ø–∞—Å C —Ç–µ–∫—É—â. –≥–æ–¥–∞")

            result_details = "–†–∞—Å—á–µ—Ç –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è —É–≥–ª–µ—Ä–æ–¥–∞:\n\n"

            # –§. 62: –ù–∞–∫–æ–ø–ª–µ–Ω–∏–µ –≤ –±–∏–æ–º–∞—Å—Å–µ
            acc_biomass = self.calculator.calculate_protective_biomass_absorption(c_next, c_curr)
            self.f62_result.setText(f"{acc_biomass:.4f}")
            result_details += f"–ë–∏–æ–º–∞—Å—Å–∞ (–§. 62):\n"
            result_details += f"  –ù–∞–∫–æ–ø–ª–µ–Ω–∏–µ: {acc_biomass:.4f} —Ç C/–≥–æ–¥\n\n"

            # –§. 65: –ù–∞–∫–æ–ø–ª–µ–Ω–∏–µ –≤ –º–µ—Ä—Ç–≤–æ–π –¥—Ä–µ–≤–µ—Å–∏–Ω–µ
            # –î–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ–ø–æ—Ä—Ü–∏—é –æ—Ç –±–∏–æ–º–∞—Å—Å—ã (10%)
            acc_deadwood = self.calculator.calculate_protective_deadwood_accumulation(
                c_next * 0.1, c_curr * 0.1
            )
            self.f65_result.setText(f"{acc_deadwood:.4f}")
            result_details += f"–ú–µ—Ä—Ç–≤–∞—è –¥—Ä–µ–≤–µ—Å–∏–Ω–∞ (–§. 65):\n"
            result_details += f"  –ù–∞–∫–æ–ø–ª–µ–Ω–∏–µ: {acc_deadwood:.4f} —Ç C/–≥–æ–¥\n\n"

            # –§. 68: –ù–∞–∫–æ–ø–ª–µ–Ω–∏–µ –≤ –ø–æ–¥—Å—Ç–∏–ª–∫–µ
            # –î–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ–ø–æ—Ä—Ü–∏—é –æ—Ç –±–∏–æ–º–∞—Å—Å—ã (5%)
            acc_litter = self.calculator.calculate_protective_litter_accumulation(
                c_next * 0.05, c_curr * 0.05
            )
            self.f68_result.setText(f"{acc_litter:.4f}")
            result_details += f"–ü–æ–¥—Å—Ç–∏–ª–∫–∞ (–§. 68):\n"
            result_details += f"  –ù–∞–∫–æ–ø–ª–µ–Ω–∏–µ: {acc_litter:.4f} —Ç C/–≥–æ–¥\n\n"

            # –§. 71: –ù–∞–∫–æ–ø–ª–µ–Ω–∏–µ –≤ –ø–æ—á–≤–µ
            # –î–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ–ø–æ—Ä—Ü–∏—é –æ—Ç –±–∏–æ–º–∞—Å—Å—ã (30%)
            acc_soil = self.calculator.calculate_protective_soil_accumulation(
                c_next * 0.3, c_curr * 0.3
            )
            self.f71_result.setText(f"{acc_soil:.4f}")
            result_details += f"–ü–æ—á–≤–∞ (–§. 71):\n"
            result_details += f"  –ù–∞–∫–æ–ø–ª–µ–Ω–∏–µ: {acc_soil:.4f} —Ç C/–≥–æ–¥\n\n"

            # –û–±—â–µ–µ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–µ
            total_acc = acc_biomass + acc_deadwood + acc_litter + acc_soil
            co2_eq = total_acc * (-44/12)

            result_details += f"‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n"
            result_details += f"–ò–¢–û–ì–û –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–µ —É–≥–ª–µ—Ä–æ–¥–∞:\n"
            result_details += f"  –í—Å–µ–≥–æ: {total_acc:.4f} —Ç C/–≥–æ–¥\n"
            result_details += f"  –≠–∫–≤–∏–≤–∞–ª–µ–Ω—Ç CO2: {co2_eq:.4f} —Ç CO2-—ç–∫–≤/–≥–æ–¥\n"
            result_details += f"  –°—Ç–∞—Ç—É—Å: {'‚úÖ –ü–æ–≥–ª–æ—â–µ–Ω–∏–µ' if co2_eq < 0 else '‚ö†Ô∏è –í—ã–±—Ä–æ—Å'}\n"

            self.accum_result.setText(result_details)
            logging.info(f"ProtectiveForestTab: Calculated accumulation for all pools - Total={total_acc:.4f} t C/year")

        except Exception as e:
            handle_error(self, e, "ProtectiveForestTab", "–§. 62/65/68/71")


    def _calculate_f72(self):
        try:
            acc_b = get_float(self.f62_result, "–ù–∞–∫–æ–ø–ª–µ–Ω–∏–µ –±–∏–æ–º–∞—Å—Å–∞ (–§.72)")
            acc_d = get_float(self.f65_result, "–ù–∞–∫–æ–ø–ª–µ–Ω–∏–µ –º–µ—Ä—Ç–≤.–æ—Ä–≥. (–§.72)") # –ú–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º
            acc_l = get_float(self.f68_result, "–ù–∞–∫–æ–ø–ª–µ–Ω–∏–µ –ø–æ–¥—Å—Ç–∏–ª–∫–∞ (–§.72)") # –ú–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º
            acc_s = get_float(self.f71_result, "–ù–∞–∫–æ–ø–ª–µ–Ω–∏–µ –ø–æ—á–≤–∞ (–§.72)")     # –ú–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º
            total_acc = self.calculator.calculate_protective_total_accumulation(acc_b, acc_d, acc_l, acc_s)
            co2_eq = total_acc * (-44/12)
            result = (f"–û–±—â–µ–µ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–µ (–§. 72):\nCPS = {total_acc:.4f} —Ç C/–≥–æ–¥\n"
                      f"–≠–∫–≤–∏–≤–∞–ª–µ–Ω—Ç CO2: {co2_eq:.4f} —Ç CO2-—ç–∫–≤/–≥–æ–¥ ({'–ü–æ–≥–ª–æ—â–µ–Ω–∏–µ' if co2_eq < 0 else '–í—ã–±—Ä–æ—Å'})")
            self.f72_result.setText(result); logging.info(f"ProtectiveForestTab: F72 calculated: {total_acc:.4f} t C/year")
        except Exception as e: handle_error(self, e, "ProtectiveForestTab", "–§. 72")

    def _calculate_f73(self):
        try:
            area = get_float(self.f73_74_area, "–ü–ª–æ—â–∞–¥—å –æ—Å—É—à–µ–Ω–∏—è (–§.73)")
            ef = get_float(self.f73_ef, "EF CO2 (–§.73)")
            emission = self.calculator.calculate_converted_land_co2(area, ef) # –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥ –∏–∑ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
            self.f73_result.setText(f"–í—ã–±—Ä–æ—Å—ã CO2 –æ—Ç –æ—Å—É—à–µ–Ω–∏—è (–§. 73): {emission:.4f} —Ç CO2/–≥–æ–¥")
            logging.info(f"ProtectiveForestTab(F73): Result={emission:.4f} t CO2/year")
        except Exception as e: handle_error(self, e, "ProtectiveForestTab", "–§. 73")

    def _calculate_f74(self):
        try:
            area = get_float(self.f73_74_area, "–ü–ª–æ—â–∞–¥—å –æ—Å—É—à–µ–Ω–∏—è (–§.74)")
            ef = get_float(self.f74_ef, "EF N2O (–§.74)")
            emission = self.calculator.calculate_converted_land_n2o(area, ef) # –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥ –∏–∑ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
            co2_eq = emission * 265
            self.f74_result.setText(f"–í—ã–±—Ä–æ—Å—ã N2O –æ—Ç –æ—Å—É—à–µ–Ω–∏—è (–§. 74): {emission:.6f} —Ç N2O/–≥–æ–¥\nCO2-—ç–∫–≤: {co2_eq:.4f} —Ç")
            logging.info(f"ProtectiveForestTab(F74): Result={emission:.6f} t N2O/year")
        except Exception as e: handle_error(self, e, "ProtectiveForestTab", "–§. 74")

    def _add_table_row(self, table):
        """–î–æ–±–∞–≤–ª—è–µ—Ç –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É –≤ —Ç–∞–±–ª–∏—Ü—É."""
        row_position = table.rowCount()
        table.insertRow(row_position)
        # –ó–∞–ø–æ–ª–Ω—è–µ–º —è—á–µ–π–∫–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º—ã–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏
        for col in range(table.columnCount()):
            item = QTableWidgetItem("")
            table.setItem(row_position, col, item)

    def _remove_table_row(self, table):
        """–£–¥–∞–ª—è–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É –∏–∑ —Ç–∞–±–ª–∏—Ü—ã."""
        current_row = table.currentRow()
        if current_row >= 0:
            table.removeRow(current_row)
        else:
            QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–æ–∫—É –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è")

    def get_summary_data(self) -> Dict[str, float]:
        """–°–æ–±–∏—Ä–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–≤–æ–¥–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞."""
        data = {
            'absorption_c': 0.0,
            'emission_co2': 0.0,
            'emission_ch4': 0.0,
            'emission_n2o': 0.0,
            'details': ''
        }
        details = "–ó–∞—â–∏—Ç–Ω—ã–µ –Ω–∞—Å–∞–∂–¥–µ–Ω–∏—è:\n"

        try:
            # –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è —É–≥–ª–µ—Ä–æ–¥–∞ (–§. 72)
            if hasattr(self, 'f62_result') and self.f62_result.text():
                accumulation = float(self.f62_result.text().replace(',', '.'))
                if accumulation < 0:
                    data['absorption_c'] += abs(accumulation)
                details += f"  - –ù–∞–∫–æ–ø–ª–µ–Ω–∏–µ —É–≥–ª–µ—Ä–æ–¥–∞: {accumulation:.2f} —Ç C/–≥–æ–¥\n"
        except:
            details += "  - –î–∞–Ω–Ω—ã–µ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã\n"

        data['details'] = details
        return data


