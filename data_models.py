# data_models.py - Данные таблиц из методики расчета выбросов.
# Комментарии на русском. Поддержка UTF-8.

# Таблица 1.1: Коэффициенты перевода, EF_CO2, W_C по видам топлива
# Структура: dict с ключом 'Вид топлива': {'unit': str, 'k_ut': float, 'NCV': float, 'EF_CO2_ut': float, 'EF_CO2_TJ': float, 'W_C_ut': float, 'W_C_TJ': float}
TABLE_1_1 = {
'Нефть, включая промысловый газоконденсат': {'unit': 'тонна', 'k_ut': 1.430, 'NCV': 41.9, 'EF_CO2_ut': 2.15, 'EF_CO2_TJ': 73.3, 'W_C_ut': 0.59, 'W_C_TJ': 20.0},
'Природный газовый конденсат': {'unit': 'тонна', 'k_ut': 1.508, 'NCV': 44.2, 'EF_CO2_ut': 1.88, 'EF_CO2_TJ': 64.2, 'W_C_ut': 0.51, 'W_C_TJ': 17.5},
'Газ попутный нефтяной (нефтяные месторождения)': {'unit': 'тыс. м3', 'k_ut': 1.154, 'NCV': 33.8, 'EF_CO2_ut': 1.77, 'EF_CO2_TJ': 60.4, 'W_C_ut': 0.48, 'W_C_TJ': 16.5},
'Газ попутный нефтяной (газоконденсатные месторождения)': {'unit': 'тыс. м3', 'k_ut': 1.154, 'NCV': 33.8, 'EF_CO2_ut': 1.64, 'EF_CO2_TJ': 55.9, 'W_C_ut': 0.45, 'W_C_TJ': 15.3},
'Газ попутный нефтяной (газовые месторождения)': {'unit': 'тыс. м3', 'k_ut': 1.154, 'NCV': 33.8, 'EF_CO2_ut': 1.62, 'EF_CO2_TJ': 55.2, 'W_C_ut': 0.44, 'W_C_TJ': 15.1},
'Бензин автомобильный': {'unit': 'тонна', 'k_ut': 1.490, 'NCV': 43.7, 'EF_CO2_ut': 2.03, 'EF_CO2_TJ': 69.3, 'W_C_ut': 0.55, 'W_C_TJ': 18.9},
'Бензин авиационный': {'unit': 'тонна', 'k_ut': 1.490, 'NCV': 43.7, 'EF_CO2_ut': 2.05, 'EF_CO2_TJ': 70.0, 'W_C_ut': 0.56, 'W_C_TJ': 19.1},
'Авиационный керосин': {'unit': 'тонна', 'k_ut': 1.470, 'NCV': 43.1, 'EF_CO2_ut': 2.10, 'EF_CO2_TJ': 71.5, 'W_C_ut': 0.57, 'W_C_TJ': 19.5},
'Керосин': {'unit': 'тонна', 'k_ut': 1.470, 'NCV': 43.1, 'EF_CO2_ut': 2.11, 'EF_CO2_TJ': 71.9, 'W_C_ut': 0.58, 'W_C_TJ': 19.6},
'Топливо дизельное': {'unit': 'тонна', 'k_ut': 1.450, 'NCV': 42.5, 'EF_CO2_ut': 2.17, 'EF_CO2_TJ': 74.1, 'W_C_ut': 0.59, 'W_C_TJ': 20.2},
'Мазут топочный': {'unit': 'тонна', 'k_ut': 1.370, 'NCV': 40.2, 'EF_CO2_ut': 2.27, 'EF_CO2_TJ': 77.4, 'W_C_ut': 0.62, 'W_C_TJ': 21.1},
'Мазут флотский': {'unit': 'тонна', 'k_ut': 1.430, 'NCV': 41.9, 'EF_CO2_ut': 2.27, 'EF_CO2_TJ': 77.4, 'W_C_ut': 0.62, 'W_C_TJ': 21.1},
'Топливо печное бытовое': {'unit': 'тонна', 'k_ut': 1.450, 'NCV': 42.5, 'EF_CO2_ut': 2.27, 'EF_CO2_TJ': 77.4, 'W_C_ut': 0.62, 'W_C_TJ': 21.1},
'Газ сжиженный нефтяной': {'unit': 'тонна', 'k_ut': 1.570, 'NCV': 46.0, 'EF_CO2_ut': 1.85, 'EF_CO2_TJ': 63.1, 'W_C_ut': 0.50, 'W_C_TJ': 17.2},
'Другие моторные топлива': {'unit': 'тонна', 'k_ut': 1.470, 'NCV': 43.1, 'EF_CO2_ut': 2.11, 'EF_CO2_TJ': 71.9, 'W_C_ut': 0.58, 'W_C_TJ': 19.6},
'Нефтебитум': {'unit': 'тонна', 'k_ut': 1.350, 'NCV': 39.6, 'EF_CO2_ut': 2.37, 'EF_CO2_TJ': 80.7, 'W_C_ut': 0.65, 'W_C_TJ': 22.0},
'Этан': {'unit': 'тонна', 'k_ut': 1.583, 'NCV': 46.4, 'EF_CO2_ut': 1.81, 'EF_CO2_TJ': 61.6, 'W_C_ut': 0.49, 'W_C_TJ': 16.8},
'Пропан': {'unit': 'тонна', 'k_ut': 1.570, 'NCV': 46.0, 'EF_CO2_ut': 1.87, 'EF_CO2_TJ': 63.8, 'W_C_ut': 0.51, 'W_C_TJ': 17.4},
'Бутан': {'unit': 'тонна', 'k_ut': 1.570, 'NCV': 46.0, 'EF_CO2_ut': 1.82, 'EF_CO2_TJ': 62.0, 'W_C_ut': 0.50, 'W_C_TJ': 16.9},
'Пропан и бутан сжиженные, газы углеводородные и их смеси сжиженные': {'unit': 'тонна', 'k_ut': 1.570, 'NCV': 46.0, 'EF_CO2_ut': 1.85, 'EF_CO2_TJ': 63.2, 'W_C_ut': 0.51, 'W_C_TJ': 17.3},
'Лигроин': {'unit': 'тонна', 'k_ut': 1.536, 'NCV': 45.0, 'EF_CO2_ut': 2.15, 'EF_CO2_TJ': 73.3, 'W_C_ut': 0.59, 'W_C_TJ': 20.0},
'Смазочные материалы': {'unit': 'тонна', 'k_ut': 1.372, 'NCV': 40.2, 'EF_CO2_ut': 2.15, 'EF_CO2_TJ': 73.3, 'W_C_ut': 0.59, 'W_C_TJ': 20.0},
'Газ нефтеперерабатывающих предприятий сухой': {'unit': 'тонна', 'k_ut': 1.500, 'NCV': 44.0, 'EF_CO2_ut': 1.30, 'EF_CO2_TJ': 44.4, 'W_C_ut': 0.35, 'W_C_TJ': 12.1},
'Кокс нефтяной и сланцевый': {'unit': 'тонна', 'k_ut': 1.080, 'NCV': 31.7, 'EF_CO2_ut': 2.86, 'EF_CO2_TJ': 97.5, 'W_C_ut': 0.78, 'W_C_TJ': 26.6},
'Другие нефтепродукты': {'unit': 'тонна', 'k_ut': 1.430, 'NCV': 41.9, 'EF_CO2_ut': 2.15, 'EF_CO2_TJ': 73.3, 'W_C_ut': 0.59, 'W_C_TJ': 20.0},
'Рядовой уголь месторождений: уголь донецкий': {'unit': 'тонна', 'k_ut': 0.876, 'NCV': 25.7, 'EF_CO2_ut': 2.65, 'EF_CO2_TJ': 90.2, 'W_C_ut': 0.72, 'W_C_TJ': 24.6},
'уголь кузнецкий': {'unit': 'тонна', 'k_ut': 0.867, 'NCV': 25.4, 'EF_CO2_ut': 2.69, 'EF_CO2_TJ': 91.9, 'W_C_ut': 0.73, 'W_C_TJ': 25.1},
'уголь карагандинский': {'unit': 'тонна', 'k_ut': 0.726, 'NCV': 21.3, 'EF_CO2_ut': 2.76, 'EF_CO2_TJ': 94.2, 'W_C_ut': 0.75, 'W_C_TJ': 25.7},
'уголь подмосковный': {'unit': 'тонна', 'k_ut': 0.335, 'NCV': 9.82, 'EF_CO2_ut': 2.79, 'EF_CO2_TJ': 95.0, 'W_C_ut': 0.76, 'W_C_TJ': 25.9},
'уголь воркутинский': {'unit': 'тонна', 'k_ut': 0.822, 'NCV': 24.1, 'EF_CO2_ut': 2.71, 'EF_CO2_TJ': 92.6, 'W_C_ut': 0.74, 'W_C_TJ': 25.3},
'уголь интинский': {'unit': 'тонна', 'k_ut': 0.649, 'NCV': 19.0, 'EF_CO2_ut': 2.73, 'EF_CO2_TJ': 93.1, 'W_C_ut': 0.75, 'W_C_TJ': 25.4},
'уголь челябинский': {'unit': 'тонна', 'k_ut': 0.552, 'NCV': 16.2, 'EF_CO2_ut': 2.78, 'EF_CO2_TJ': 94.9, 'W_C_ut': 0.76, 'W_C_TJ': 25.9},
'уголь свердловский': {'unit': 'тонна', 'k_ut': 0.330, 'NCV': 9.67, 'EF_CO2_ut': 2.76, 'EF_CO2_TJ': 94.2, 'W_C_ut': 0.75, 'W_C_TJ': 25.7},
'уголь башкирский': {'unit': 'тонна', 'k_ut': 0.264, 'NCV': 7.74, 'EF_CO2_ut': 2.76, 'EF_CO2_TJ': 94.2, 'W_C_ut': 0.75, 'W_C_TJ': 25.7},
'уголь нерюнгринский': {'unit': 'тонна', 'k_ut': 0.987, 'NCV': 28.9, 'EF_CO2_ut': 2.76, 'EF_CO2_TJ': 94.2, 'W_C_ut': 0.75, 'W_C_TJ': 25.7},
'уголь якутский': {'unit': 'тонна', 'k_ut': 0.751, 'NCV': 22.0, 'EF_CO2_ut': 2.76, 'EF_CO2_TJ': 94.2, 'W_C_ut': 0.75, 'W_C_TJ': 25.7},
'уголь черемховский': {'unit': 'тонна', 'k_ut': 0.752, 'NCV': 22.0, 'EF_CO2_ut': 2.75, 'EF_CO2_TJ': 94.0, 'W_C_ut': 0.75, 'W_C_TJ': 25.7},
'уголь азейский': {'unit': 'тонна', 'k_ut': 0.483, 'NCV': 14.2, 'EF_CO2_ut': 2.75, 'EF_CO2_TJ': 93.9, 'W_C_ut': 0.75, 'W_C_TJ': 25.6},
'уголь читинский': {'unit': 'тонна', 'k_ut': 0.483, 'NCV': 14.2, 'EF_CO2_ut': 2.90, 'EF_CO2_TJ': 98.9, 'W_C_ut': 0.79, 'W_C_TJ': 27.0},
'уголь гусиноозерский': {'unit': 'тонна', 'k_ut': 0.506, 'NCV': 14.8, 'EF_CO2_ut': 2.78, 'EF_CO2_TJ': 94.9, 'W_C_ut': 0.76, 'W_C_TJ': 25.9},
'уголь хакасский': {'unit': 'тонна', 'k_ut': 0.727, 'NCV': 21.3, 'EF_CO2_ut': 2.77, 'EF_CO2_TJ': 94.4, 'W_C_ut': 0.76, 'W_C_TJ': 25.8},
'уголь канско-ачинский': {'unit': 'тонна', 'k_ut': 0.516, 'NCV': 15.1, 'EF_CO2_ut': 2.87, 'EF_CO2_TJ': 98.1, 'W_C_ut': 0.78, 'W_C_TJ': 26.8},
'уголь тувинский': {'unit': 'тонна', 'k_ut': 0.906, 'NCV': 26.6, 'EF_CO2_ut': 2.76, 'EF_CO2_TJ': 94.2, 'W_C_ut': 0.75, 'W_C_TJ': 25.7},
'уголь тунгусский': {'unit': 'тонна', 'k_ut': 0.754, 'NCV': 22.1, 'EF_CO2_ut': 2.76, 'EF_CO2_TJ': 94.2, 'W_C_ut': 0.75, 'W_C_TJ': 25.7},
'уголь магаданский': {'unit': 'тонна', 'k_ut': 0.701, 'NCV': 20.5, 'EF_CO2_ut': 2.73, 'EF_CO2_TJ': 93.1, 'W_C_ut': 0.75, 'W_C_TJ': 25.4},
'уголь арктический (шпицбергенский)': {'unit': 'тонна', 'k_ut': 0.669, 'NCV': 19.6, 'EF_CO2_ut': 2.76, 'EF_CO2_TJ': 94.2, 'W_C_ut': 0.75, 'W_C_TJ': 25.7},
'уголь норильский': {'unit': 'тонна', 'k_ut': 0.761, 'NCV': 22.3, 'EF_CO2_ut': 2.76, 'EF_CO2_TJ': 94.2, 'W_C_ut': 0.75, 'W_C_TJ': 25.7},
'уголь огоджинский': {'unit': 'тонна', 'k_ut': 0.447, 'NCV': 13.1, 'EF_CO2_ut': 2.76, 'EF_CO2_TJ': 94.2, 'W_C_ut': 0.75, 'W_C_TJ': 25.7},
'уголь камчатский': {'unit': 'тонна', 'k_ut': 0.323, 'NCV': 9.47, 'EF_CO2_ut': 2.73, 'EF_CO2_TJ': 93.1, 'W_C_ut': 0.75, 'W_C_TJ': 25.4},
'уголь Приморья': {'unit': 'тонна', 'k_ut': 0.506, 'NCV': 14.8, 'EF_CO2_ut': 2.73, 'EF_CO2_TJ': 93.1, 'W_C_ut': 0.75, 'W_C_TJ': 25.4},
'уголь экибастузский': {'unit': 'тонна', 'k_ut': 0.628, 'NCV': 18.4, 'EF_CO2_ut': 2.77, 'EF_CO2_TJ': 94.6, 'W_C_ut': 0.76, 'W_C_TJ': 25.8},
'уголь алтайский': {'unit': 'тонна', 'k_ut': 0.782, 'NCV': 22.9, 'EF_CO2_ut': 2.76, 'EF_CO2_TJ': 94.2, 'W_C_ut': 0.75, 'W_C_TJ': 25.7},
'уголь тугнуйский': {'unit': 'тонна', 'k_ut': 0.692, 'NCV': 20.3, 'EF_CO2_ut': 2.76, 'EF_CO2_TJ': 94.2, 'W_C_ut': 0.75, 'W_C_TJ': 25.7},
'уголь прочих месторождений': {'unit': 'тонна', 'k_ut': 0.768, 'NCV': 22.5, 'EF_CO2_ut': 2.76, 'EF_CO2_TJ': 94.2, 'W_C_ut': 0.75, 'W_C_TJ': 25.7},
'уголь импортный': {'unit': 'тонна', 'k_ut': 0.768, 'NCV': 22.5, 'EF_CO2_ut': 2.76, 'EF_CO2_TJ': 94.2, 'W_C_ut': 0.75, 'W_C_TJ': 25.7},
'Антрацит': {'unit': 'тонна', 'k_ut': 0.911, 'NCV': 26.7, 'EF_CO2_ut': 2.88, 'EF_CO2_TJ': 98.3, 'W_C_ut': 0.79, 'W_C_TJ': 26.8},
'Коксующийся уголь': {'unit': 'тонна', 'k_ut': 0.962, 'NCV': 28.2, 'EF_CO2_ut': 2.77, 'EF_CO2_TJ': 94.6, 'W_C_ut': 0.76, 'W_C_TJ': 25.8},
'Каменный уголь': {'unit': 'тонна', 'k_ut': 0.768, 'NCV': 22.5, 'EF_CO2_ut': 2.77, 'EF_CO2_TJ': 94.6, 'W_C_ut': 0.76, 'W_C_TJ': 25.8},
'Бурый уголь': {'unit': 'тонна', 'k_ut': 0.467, 'NCV': 13.7, 'EF_CO2_ut': 2.96, 'EF_CO2_TJ': 101.0, 'W_C_ut': 0.81, 'W_C_TJ': 27.6},
'Сланцы горючие': {'unit': 'тонна', 'k_ut': 0.300, 'NCV': 8.79, 'EF_CO2_ut': 3.14, 'EF_CO2_TJ': 107.0, 'W_C_ut': 0.86, 'W_C_TJ': 29.2},
'Брикеты угольные': {'unit': 'тонна', 'k_ut': 0.605, 'NCV': 17.7, 'EF_CO2_ut': 2.86, 'EF_CO2_TJ': 97.5, 'W_C_ut': 0.78, 'W_C_TJ': 26.6},
'Кокс металлургический': {'unit': 'тонна', 'k_ut': 0.990, 'NCV': 29.0, 'EF_CO2_ut': 3.14, 'EF_CO2_TJ': 107.0, 'W_C_ut': 0.86, 'W_C_TJ': 29.2},
'Смола каменноугольная коксохимических заводов': {'unit': 'тонна', 'k_ut': 1.300, 'NCV': 38.1, 'EF_CO2_ut': 2.37, 'EF_CO2_TJ': 80.7, 'W_C_ut': 0.65, 'W_C_TJ': 22.0},
'Газ горючий искусственный коксовый': {'unit': 'тыс. м3', 'k_ut': 0.570, 'NCV': 16.7, 'EF_CO2_ut': 1.30, 'EF_CO2_TJ': 44.4, 'W_C_ut': 0.35, 'W_C_TJ': 12.1},
'Газ горючий искусственный доменный': {'unit': 'тыс. м3', 'k_ut': 0.143, 'NCV': 4.19, 'EF_CO2_ut': 7.62, 'EF_CO2_TJ': 260.0, 'W_C_ut': 2.08, 'W_C_TJ': 71.0},
'Газ горючий искусственный конвертерный': {'unit': 'тыс. м3', 'k_ut': 0.240, 'NCV': 7.06, 'EF_CO2_ut': 5.33, 'EF_CO2_TJ': 182.0, 'W_C_ut': 0.35, 'W_C_TJ': 49.6},
'Газ горючий природный (естественный)': {'unit': 'тыс. м3', 'k_ut': 1.129, 'NCV': 33.08, 'EF_CO2_ut': 1.59, 'EF_CO2_TJ': 54.4, 'W_C_ut': 0.43, 'W_C_TJ': 14.8},
'Газ компримированный': {'unit': 'тыс. м3', 'k_ut': 1.129, 'NCV': 33.08, 'EF_CO2_ut': 1.59, 'EF_CO2_TJ': 54.4, 'W_C_ut': 0.43, 'W_C_TJ': 14.8},
'Газ сжиженный': {'unit': 'тонна', 'k_ut': 1.570, 'NCV': 46.0, 'EF_CO2_ut': 1.65, 'EF_CO2_TJ': 56.4, 'W_C_ut': 0.45, 'W_C_TJ': 15.4},
'Торф топливный': {'unit': 'тонна', 'k_ut': 0.340, 'NCV': 10.0, 'EF_CO2_ut': 3.11, 'EF_CO2_TJ': 106.0, 'W_C_ut': 0.85, 'W_C_TJ': 28.9},
'Брикеты и полубрикеты торфяные': {'unit': 'тонна', 'k_ut': 0.600, 'NCV': 17.6, 'EF_CO2_ut': 3.11, 'EF_CO2_TJ': 106.0, 'W_C_ut': 0.85, 'W_C_TJ': 28.9},
'Отходы бытовые (небиологическая фракция)': {'unit': 'тонна', 'k_ut': 0.341, 'NCV': 10.0, 'EF_CO2_ut': 2.69, 'EF_CO2_TJ': 91.7, 'W_C_ut': 0.73, 'W_C_TJ': 25.0},
'Прочие горючие отходы технологических производств': {'unit': 'тонна у.т.', 'k_ut': 1.000, 'NCV': 29.3, 'EF_CO2_ut': 4.19, 'EF_CO2_TJ': 143.0, 'W_C_ut': 1.14, 'W_C_TJ': 39.0},
'Нефтяные отходы': {'unit': 'тонна', 'k_ut': 1.372, 'NCV': 40.2, 'EF_CO2_ut': 2.12, 'EF_CO2_TJ': 72.2, 'W_C_ut': 0.58, 'W_C_TJ': 19.7},
'Биобензин': {'unit': 'тонна', 'k_ut': 0.921, 'NCV': 27.0, 'EF_CO2_ut': 2.07, 'EF_CO2_TJ': 70.8, 'W_C_ut': 0.57, 'W_C_TJ': 19.3},
'Био-дизтопливо': {'unit': 'тонна', 'k_ut': 0.921, 'NCV': 27.0, 'EF_CO2_ut': 2.07, 'EF_CO2_TJ': 70.8, 'W_C_ut': 0.57, 'W_C_TJ': 19.3},
'Другие виды жидкого биотоплива': {'unit': 'тонна', 'k_ut': 0.935, 'NCV': 27.4, 'EF_CO2_ut': 2.33, 'EF_CO2_TJ': 79.6, 'W_C_ut': 0.63, 'W_C_TJ': 21.7},
}

# Таблица 1.2: Плотность CO2 и CH4 при разных условиях
# Структура: list of dicts [{'N': int, 'conditions': str, 'rho_CO2': float, 'rho_CH4': float}]
TABLE_1_2 = [
    {'N': 1, 'conditions': '273,15 К (0 °C); 101,325 кПа', 'rho_CO2': 1.9768, 'rho_CH4': 0.7170},
    {'N': 2, 'conditions': '288,15 К (15 °C); 101,325 кПа', 'rho_CO2': 1.8738, 'rho_CH4': 0.6797},
    {'N': 3, 'conditions': '293,15 К (20 °C); 101,325 кПа', 'rho_CO2': 1.8393, 'rho_CH4': 0.6680},
]

# Таблица 2.1: Коэффициенты выбросов для факелов
# Структура: list of dicts [{'N': int, 'type': str, 'EF_CO2_t': float, 'EF_CO2_m3': float, 'EF_CH4_t': float, 'EF_CH4_m3': float}]
TABLE_2_1 = [
    {'N': 1, 'type': 'Газ природный', 'EF_CO2_t': 2.6986, 'EF_CO2_m3': 1.8263, 'EF_CH4_t': 0.0006, 'EF_CH4_m3': 0.0004},
    {'N': 2, 'type': 'Попутный нефтяной газ', 'EF_CO2_t': 2.6121, 'EF_CO2_m3': 3.3689, 'EF_CH4_t': 0.0041, 'EF_CH4_m3': 0.0053},
    {'N': 3, 'type': 'Газ дегазации угольных пластов', 'EF_CO2_t': 1.8863, 'EF_CO2_m3': 1.6294, 'EF_CH4_t': 0.0206, 'EF_CH4_m3': 0.0178},
    {'N': 4, 'type': 'Газ газоконденсатных месторождений', 'EF_CO2_t': 2.7470, 'EF_CO2_m3': 2.0245, 'EF_CH4_t': 0.0005, 'EF_CH4_m3': 0.0004},
]

# Таблица 2.2: Коэффициенты недожога
# Структура: list of dicts [{'N': int, 'condition': str, 'CF': float}]
TABLE_2_2 = [
    {'N': 1, 'condition': 'Бессажевое сжигание (в том числе природного газа некондиционных газовых и газоконденсатных смесей)', 'CF': 0.0006},
    {'N': 2, 'condition': 'Сажевое сжигание (в том числе некондиционного углеводородного конденсата)', 'CF': 0.035},
    {'N': 3, 'condition': 'Нефтяные, газоконденсатные и газовые месторождения', 'CF': 0.02},
    {'N': 4, 'condition': 'Нефтеперерабатывающие, нефтехимические, химические металлургические и прочие предприятия', 'CF': 0.005},
]

# Таблица 3.1: Значения концентрации метана и диоксида углерода для определения фугитивных выбросов
# Структура: list of dicts [{'N': int, 'type': str, 'W_CH4': float, 'W_CO2': float}]
TABLE_3_1 = [
    {'N': 1, 'type': 'Газ природный (сероводородсодержащие месторождения)', 'W_CH4': 51.5, 'W_CO2': 14.2},
    {'N': 2, 'type': 'Газ природный', 'W_CH4': 98.4, 'W_CO2': 0.04},
    {'N': 3, 'type': 'Попутный нефтяной газ', 'W_CH4': 89.8, 'W_CO2': 8.4},
    {'N': 4, 'type': 'Газ дегазации угольных пластов', 'W_CH4': 76.0, 'W_CO2': 10.6},
]

# Таблица 6.1: Коэффициенты выбросов CO2 для некоторых карбонатов (производство извести и доломита)
# Структура: list of dicts [{'formula': str, 'EF_CO2': float}]
TABLE_6_1 = [
    {'formula': 'CaCO3', 'EF_CO2': 0.440},
    {'formula': 'MgCO3', 'EF_CO2': 0.522},
    {'formula': 'CaMg(CO3)2', 'EF_CO2': 0.477},
    {'formula': 'FeCO3', 'EF_CO2': 0.380},
]

# Таблица 6.2: Коэффициенты выбросов CO2 для некоторых оксидов, полученных из карбонатного сырья
# Структура: list of dicts [{'formula': str, 'EF_CO2': float}]
TABLE_6_2 = [
    {'formula': 'CaO', 'EF_CO2': 0.785},
    {'formula': 'MgO', 'EF_CO2': 1.092},
]

# Таблица 8.1: Коэффициенты выбросов CO2 для некоторых карбонатов (производство стекла)
# Структура: list of dicts [{'formula': str, 'EF_CO2': float}]
TABLE_8_1 = [
    {'formula': 'Na2CO3', 'EF_CO2': 0.415},
    {'formula': 'NaHCO3', 'EF_CO2': 0.524},
    {'formula': 'BaCO3', 'EF_CO2': 0.223},
    {'formula': 'K2CO3', 'EF_CO2': 0.318},
    {'formula': 'Li2CO3', 'EF_CO2': 0.596},
    {'formula': 'SrCO3', 'EF_CO2': 0.284},
]

# Таблица 11.1: Коэффициенты выбросов N2O для производства азотной кислоты, капролактама, глиоксаля и глиоксиловой кислоты
# Структура: list of dicts [{'process': str, 'EF_N2O': float, 'unit': str}]
TABLE_11_1 = [
    {'process': 'Производство азотной кислоты Заводы с неселективным каталитическим восстановлением (все процессы)', 'EF_N2O': 2, 'unit': 'кг N2O/тонну азотной кислоты'},
    {'process': 'Производство азотной кислоты Заводы, на которых NiO разрушают в процесс синтез или в остаточном газе', 'EF_N2O': 2.5, 'unit': 'кг N2O/тонну азотной кислоты'},
    {'process': 'Производство азотной кислоты Заводы, где процесс протекает при атмосферном (низком) давлении', 'EF_N2O': 5, 'unit': 'кг N2O/тонну азотной кислоты'},
    {'process': 'Производство азотной кислоты Заводы, где процесс протекает при среднем давлении', 'EF_N2O': 7.5, 'unit': 'кг N2O/тонну азотной кислоты'},
    {'process': 'Производство азотной кислоты Заводы, где процесс протекает при высоком давлении', 'EF_N2O': 9, 'unit': 'кг N2O/тонну азотной кислоты'},
    {'process': 'Производство глиоксаля Технология окисления ацетальдегида азотной кислотой без очистки выбросов', 'EF_N2O': 0.52, 'unit': 'т N2O/тонну глиоксаля'},
    {'process': 'Производство глиоксаля Технология окисления ацетальдегида азотной кислотой с использованием очистки выбросов', 'EF_N2O': 0.10, 'unit': 'т N2O/тонну глиоксаля'},
    {'process': 'Производство глиоксиловой кислоты Без использования технологии очистки выбросов', 'EF_N2O': 0.10, 'unit': 'т N2O/тонну глиоксиловой кислоты'},
    {'process': 'Производство глиоксиловой кислоты С использованием технологии очистки выбросов', 'EF_N2O': 0.02, 'unit': 'т N2O/тонну глиоксиловой кислоты'},
    {'process': 'Производство капролактама Технология получения гидроксиламин сульфат методом Рашига', 'EF_N2O': 9.0, 'unit': 'кг N2O/тонну капролактама'},
    {'process': 'Производство капролактама Технология получения гидроксиламин сульфат методом восстановления NO, полученного предварительной парокислородной конверсией аммиака', 'EF_N2O': 2.0, 'unit': 'кг N2O/тонну капролактама'},
]

# Таблица 12.1: Содержание углерода в сырье и продуктах нефтехимического производства
# Структура: list of dicts [{'substance': str, 'W_C': float}]
TABLE_12_1 = [
    {'substance': 'Ацетонитрил', 'W_C': 0.5852},
    {'substance': 'Акрилонитрил', 'W_C': 0.6664},
    {'substance': 'Бутадиен', 'W_C': 0.888},
    {'substance': 'Сажа', 'W_C': 0.970},
    {'substance': 'Сырье углеродной сажи', 'W_C': 0.900},
    {'substance': 'Этан', 'W_C': 0.799},
    {'substance': 'Этилен', 'W_C': 0.856},
    {'substance': 'Этилендихлорид', 'W_C': 0.243},
    {'substance': 'Этиленгликоль', 'W_C': 0.387},
    {'substance': 'Окись этилена', 'W_C': 0.545},
    {'substance': 'Циановодород', 'W_C': 0.4444},
    {'substance': 'Метанол', 'W_C': 0.375},
    {'substance': 'Метан', 'W_C': 0.749},
    {'substance': 'Пропан', 'W_C': 0.817},
    {'substance': 'Пропилен', 'W_C': 0.8563},
    {'substance': 'Мономер хлористый винил', 'W_C': 0.384},
]

# Таблица 14.1: Содержание углерода в сырье, материалах и продукции металлургического производства
# Структура: list of dicts [{'material': str, 'W_C': float}]
TABLE_14_1 = [
    {'material': 'Железо прямого восстановления', 'W_C': 0.017},
    {'material': 'Железо горячего брикетирования', 'W_C': 0.013},
    {'material': 'Сталь, стальной лом', 'W_C': 0.0025},
    {'material': 'Чугун, чугунный лом', 'W_C': 0.043},
    {'material': 'Электроды для электродуговых печей', 'W_C': 0.82},
    {'material': 'Углеродсодержащие материалы для сталеплавильных печей', 'W_C': 0.83},
    {'material': 'Известняк', 'W_C': 0.12},
    {'material': 'Доломит', 'W_C': 0.13},
]

# Таблица 16.1: Коэффициенты для расчета выбросов от производства алюминия
# Структура: list of dicts [{'technology': str, 'S_CF4': float, 'F_C2F6_CF4': float}]
TABLE_16_1 = [
    {'technology': 'CWPB', 'S_CF4': 0.143, 'F_C2F6_CF4': 0.121},
    {'technology': 'VSS', 'S_CF4': 0.092, 'F_C2F6_CF4': 0.053},
    {'technology': 'HSS', 'S_CF4': 0.099, 'F_C2F6_CF4': 0.085},
]

# Таблица 18.1: Коэффициенты выбросов CO2 и плотность для транспортных топлив
# Структура: list of dicts [{'fuel': str, 'EF_CO2_t': float, 'EF_CO2_TJ': float, 'EF_CO2_ut': float, 'rho': float}]
TABLE_18_1 = [
    {'fuel': 'Бензин А-76 (АИ-80)', 'EF_CO2_t': 3.026, 'EF_CO2_TJ': 69.3, 'EF_CO2_ut': 2.031, 'rho': 0.715},
    {'fuel': 'Бензин АИ-92', 'EF_CO2_t': 3.026, 'EF_CO2_TJ': 69.3, 'EF_CO2_ut': 2.031, 'rho': 0.735},
    {'fuel': 'Бензин АИ-93', 'EF_CO2_t': 3.026, 'EF_CO2_TJ': 69.3, 'EF_CO2_ut': 2.031, 'rho': 0.745},
    {'fuel': 'Бензин АИ-95', 'EF_CO2_t': 3.026, 'EF_CO2_TJ': 69.3, 'EF_CO2_ut': 2.031, 'rho': 0.750},
    {'fuel': 'Бензин АИ-98', 'EF_CO2_t': 3.026, 'EF_CO2_TJ': 69.3, 'EF_CO2_ut': 2.031, 'rho': 0.765},
    {'fuel': 'Дизельное топливо летнее', 'EF_CO2_t': 3.149, 'EF_CO2_TJ': 74.1, 'EF_CO2_ut': 2.172, 'rho': 0.860},
    {'fuel': 'Дизельное топливо зимнее', 'EF_CO2_t': 3.149, 'EF_CO2_TJ': 74.1, 'EF_CO2_ut': 2.172, 'rho': 0.840},
    {'fuel': 'Дизельное топливо арктическое', 'EF_CO2_t': 3.149, 'EF_CO2_TJ': 74.1, 'EF_CO2_ut': 2.172, 'rho': 0.830},
    {'fuel': 'Сжиженный нефтяной газ (СНГ) (пропан)', 'EF_CO2_t': 2.903, 'EF_CO2_TJ': 63.1, 'EF_CO2_ut': 1.849, 'rho': 0.528},
    {'fuel': 'Сжиженный нефтяной газ СНГ (изобутан)', 'EF_CO2_t': 2.903, 'EF_CO2_TJ': 63.1, 'EF_CO2_ut': 1.849, 'rho': 0.582},
    {'fuel': 'Сжиженный нефтяной газ СНГ (н-бутан)', 'EF_CO2_t': 2.903, 'EF_CO2_TJ': 63.1, 'EF_CO2_ut': 1.849, 'rho': 0.601},
    {'fuel': 'Компримированный природный газ (КПГ)', 'EF_CO2_t': 1.840, 'EF_CO2_TJ': 54.4, 'EF_CO2_ut': 1.594, 'rho': 0.668},
    {'fuel': 'Сжиженный природный газ (СПГ)', 'EF_CO2_t': 2.710, 'EF_CO2_TJ': 54.4, 'EF_CO2_ut': 1.594, 'rho': 0.424},
    {'fuel': 'Авиационный керосин', 'EF_CO2_t': 3.16, 'EF_CO2_TJ': 71.9, 'EF_CO2_ut': 2.100, 'rho': 0.8},
    {'fuel': 'Авиационный бензин', 'EF_CO2_t': 3.10, 'EF_CO2_TJ': 69.3, 'EF_CO2_ut': 2.050, 'rho': 0.8},
    {'fuel': 'Топливо для реактивных двигателей', 'EF_CO2_t': 3.10, 'EF_CO2_TJ': 71.9, 'EF_CO2_ut': 2.110, 'rho': 0.8},
    {'fuel': 'Смазочные материалы', 'EF_CO2_t': 2.95, 'EF_CO2_TJ': None, 'EF_CO2_ut': None, 'rho': None},
    {'fuel': 'Топочный мазут', 'EF_CO2_t': None, 'EF_CO2_TJ': 77.4, 'EF_CO2_ut': None, 'rho': None},
    {'fuel': 'Твердые топлива (уголь и продукты его переработки) (рядовой) (т) Донецкий', 'EF_CO2_t': 2.32, 'EF_CO2_TJ': None, 'EF_CO2_ut': None, 'rho': None},
    {'fuel': 'Кузнецкий', 'EF_CO2_t': 2.33, 'EF_CO2_TJ': None, 'EF_CO2_ut': None, 'rho': None},
    {'fuel': 'Нерюнгринский', 'EF_CO2_t': 2.72, 'EF_CO2_TJ': None, 'EF_CO2_ut': None, 'rho': None},
    {'fuel': 'Черемховский', 'EF_CO2_t': 2.07, 'EF_CO2_TJ': None, 'EF_CO2_ut': None, 'rho': None},
    {'fuel': 'Канско-Ачинский', 'EF_CO2_t': 1.48, 'EF_CO2_TJ': None, 'EF_CO2_ut': None, 'rho': None},
    {'fuel': 'Казахский (Каражаринский)', 'EF_CO2_t': 1.38, 'EF_CO2_TJ': None, 'EF_CO2_ut': None, 'rho': None},
    {'fuel': 'Азейский', 'EF_CO2_t': 1.33, 'EF_CO2_TJ': None, 'EF_CO2_ut': None, 'rho': None},
    {'fuel': 'Читинский', 'EF_CO2_t': 1.40, 'EF_CO2_TJ': None, 'EF_CO2_ut': None, 'rho': None},
    {'fuel': 'Торф (т) Торф топливный', 'EF_CO2_t': 1.06, 'EF_CO2_TJ': None, 'EF_CO2_ut': None, 'rho': None},
    {'fuel': 'Брикеты и полубрикеты торфяные', 'EF_CO2_t': 1.87, 'EF_CO2_TJ': None, 'EF_CO2_ut': None, 'rho': None},
    {'fuel': 'Отходы (т) Отходы бытовые (небиологическая фракция)', 'EF_CO2_t': 0.92, 'EF_CO2_TJ': None, 'EF_CO2_ut': None, 'rho': None},
    {'fuel': 'Нефтяные отходы', 'EF_CO2_t': 2.91, 'EF_CO2_TJ': None, 'EF_CO2_ut': None, 'rho': None},
    {'fuel': 'Прочие горючие отходы производства (т у.т.)', 'EF_CO2_t': 4.19, 'EF_CO2_TJ': None, 'EF_CO2_ut': None, 'rho': None},
]

class DataService:
    """
    Класс-сервис для предоставления централизованного доступа ко всем табличным данным.
    Он загружает все таблицы в память при создании экземпляра и предоставляет
    методы для их получения, а также вспомогательные методы для UI.
    """
    def __init__(self):
        """
        Конструктор класса. Инициализирует все таблицы как атрибуты экземпляра.
        """
        self.table_1_1 = TABLE_1_1
        self.table_1_2 = TABLE_1_2
        self.table_2_1 = TABLE_2_1
        self.table_2_2 = TABLE_2_2
        self.table_3_1 = TABLE_3_1
        self.table_6_1 = TABLE_6_1
        self.table_6_2 = TABLE_6_2
        self.table_8_1 = TABLE_8_1
        self.table_11_1 = TABLE_11_1
        self.table_12_1 = TABLE_12_1
        self.table_14_1 = TABLE_14_1
        self.table_16_1 = TABLE_16_1
        self.table_18_1 = TABLE_18_1

    # --- Методы-геттеры для UI и модулей расчетов ---

    def get_fuels_table_1_1(self):
        """Возвращает список наименований топлива из Таблицы 1.1."""
        return list(self.table_1_1.keys())

    def get_fuel_data_table_1_1(self, fuel_name):
        """Возвращает данные для конкретного вида топлива из Таблицы 1.1."""
        return self.table_1_1.get(fuel_name)

    def get_density_data_table_1_2(self, conditions_index=2):
        """Возвращает данные о плотности газов из Таблицы 1.2.
        По умолчанию для стандартных условий (20 °C).
        """
        # Индекс 2 соответствует N=3 (20 °C)
        return self.table_1_2[conditions_index]

    def get_flare_gas_types_table_2_1(self):
        """Возвращает список типов газов для сжигания в факелах из Таблицы 2.1."""
        return [item['type'] for item in self.table_2_1]
        
    def get_flare_gas_data_table_2_1(self, gas_type):
        """Возвращает данные для конкретного газа из Таблицы 2.1."""
        for item in self.table_2_1:
            if item['type'] == gas_type:
                return item
        return None

    def get_fugitive_gas_types_table_3_1(self):
        """Возвращает список типов газов для фугитивных выбросов из Таблицы 3.1."""
        return [item['type'] for item in self.table_3_1]

    def get_fugitive_gas_data_table_3_1(self, gas_type):
        """Возвращает данные для конкретного газа из Таблицы 3.1."""
        for item in self.table_3_1:
            if item['type'] == gas_type:
                return item
        return None

    def get_carbonate_formulas_table_6_1(self):
        """Возвращает список формул карбонатов из Таблицы 6.1."""
        return [item['formula'] for item in self.table_6_1]

    def get_carbonate_data_table_6_1(self, formula):
        """Возвращает данные для карбоната по его формуле из Таблицы 6.1."""
        for item in self.table_6_1:
            if item['formula'] == formula:
                return item
        return None
        
    def get_oxide_formulas_table_6_2(self):
        """Возвращает список формул оксидов из Таблицы 6.2."""
        return [item['formula'] for item in self.table_6_2]

    def get_oxide_data_table_6_2(self, formula):
        """Возвращает данные для оксида по его формуле из Таблицы 6.2."""
        for item in self.table_6_2:
            if item['formula'] == formula:
                return item
        return None

    def get_glass_carbonate_formulas_table_8_1(self):
        """Возвращает список формул карбонатов для производства стекла из Таблицы 8.1."""
        return [item['formula'] for item in self.table_8_1]

    def get_glass_carbonate_data_table_8_1(self, formula):
        """Возвращает данные для карбоната по его формуле из Таблицы 8.1."""
        for item in self.table_8_1:
            if item['formula'] == formula:
                return item
        return None
        
    def get_ammonia_processes_table_11_1(self):
        """Возвращает список процессов из Таблицы 11.1."""
        return [item['process'] for item in self.table_11_1]

    def get_ammonia_process_data_table_11_1(self, process_name):
        """Возвращает данные для конкретного процесса из Таблицы 11.1."""
        for item in self.table_11_1:
            if item['process'] == process_name:
                return item
        return None
